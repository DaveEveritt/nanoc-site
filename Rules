#!/usr/bin/env ruby

### Preprocessing ############################################################

preprocess do
  def paginate_articles
    require 'time'

    # Get articles
    articles = items.select { |i| i[:kind] == 'article' }.sort_by { |a| Time.parse(a[:created_at]) }

    # Paginate articles
    article_groups = []
    article_groups << articles.slice!(0..config[:page_size]-1) until articles.empty?

    # Create pagination pages
    article_groups.each_with_index do |articles, i|
      # Create item
      items << Nanoc3::Item.new(
        "<%= render 'pagination_page', :articles_per_item => #{config[:page_size]}, :item_id => #{i} %>",
        {
          :title      => "News Archive (posts #{i*config[:page_size]}–#{(i+1)*config[:page_size]})",
          :is_dynamic => true
        },
        "/news/#{i+1}/"
      )
    end
  end

  paginate_articles
end

### Routing ##################################################################

route '/404/' do
  '/error-404.php'
end

route '/assets/style/' do
  # path with version
  '/assets/style' + '-v' + rep.item[:version].to_s + '.css'
end

route '/news/feed_private/' do
  rep.item.identifier + 'index.xml'
end

[ '/manual/', '/migrating/' ].each do |pattern|
  route pattern, :rep => 'notoc' do
    nil
  end
end

route '*' do
  if item[:is_partial]
    # Don’t output partial items (e.g. sub-stylesheets)
    nil
  else
    # Place each file in its own directory
    rep.item.identifier + 'index.html'
  end
end

### Compilation ##############################################################

DEFAULT_OPTIONS = {
  :kramdown => { :auto_ids => false }
}

compile '/assets/style/' do
  filter :erb
  filter :relativize_paths, :type => :css
  filter :rainpress
end

compile '/assets/style/*' do
  # don't filter partial stylesheets
end

compile '/news/feed_private/' do
  filter :erb
end

[ '/manual/', '/migrating/' ].each do |pattern|
  compile pattern, :rep => 'notoc' do
    filter :erb
    filter :kramdown, DEFAULT_OPTIONS[:kramdown]
    filter :add_sections
  end
end

compile '/404/' do
  filter :erb
  layout '/default/'
end

compile '/' do
  filter :erb
  layout '/default/'
  filter :relativize_paths, :type => :html
  filter :rubypants
end

compile '*' do
  filter :erb if item[:is_dynamic]

  case item[:markdown]
  when 'advanced'
    filter :kramdown, DEFAULT_OPTIONS[:kramdown]
  when 'basic'
    filter :rdiscount
  end

  filter :syntax_colorize

  snapshot :before_sections
  filter :add_sections
  layout '/default/'
  filter :add_links_to_headers
  filter :relativize_paths, :type => :html
  filter :rubypants
end

### Layouting ################################################################

layout '*', :erb
