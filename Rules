#!/usr/bin/env ruby

### Preprocessing

preprocess do
  def paginate_articles
    # Get articles
    articles = items.select { |i| i[:kind] == 'article' }.sort_by { |a| Time.parse(a[:created_at]) }

    # Paginate articles
    article_groups = []
    article_groups << articles.slice!(0..config[:page_size]-1) until articles.empty?

    # Create pagination pages
    article_groups.each_with_index do |articles, i|
      # Create item
      items << Nanoc3::Item.new(
        "<%= render 'pagination_page', :articles_per_item => #{config[:page_size]}, :item_id => #{i} %>",
        { :title => "Blog - Archive (#{i+1})" },
        "/blog/#{i+1}/"
      )
    end
  end

  paginate_articles
end

### Routing Rules

route '/assets/style/' do |rep|
  # path with version
  rep.item.identifier[0..-2] + '-v' + rep.item[:version].to_s + '.css'
end

route '/blog/feed_private/' do |rep|
  rep.item.identifier + 'index.xml'
end

route '*' do |rep|
  rep.item.identifier + 'index.html'
end

### Compilation Rules

compile '/assets/style/' do |rep|
  # do nothing
end

compile '/blog/feed_private/' do |rep|
  rep.filter :erb
end

compile '*' do |rep|
  rep.filter :erb
  rep.layout '/default/'
  rep.filter :add_links_to_headers
  rep.filter :rubypants
end

### Layouting rules

layout '*', :erb
